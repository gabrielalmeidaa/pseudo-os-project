quit
:q
quit
c
@operations_by_process[0][5]
@operations_by_process[0][4]
@operations_by_process[0][3]
@operations_by_process[0][2]
@operations_by_process[0][1]
@operations_by_process[0][0]
@operations_by_process[0]
@operations_by_process
operation
            @operating_system_context.delete_file(operation.filename)
@operating_system_context.dump_memory
c
@operating_system_context.dump_memory
quit
@operations_by_process[0][2quit]
@operations_by_process[0][2]
@operations_by_process[0][1]
@operations_by_process[0][0]
@operations_by_process[0]
@operating_system_context[0]
@operating_system_context
@operating_system_contex
start_index
filename
quit
@operating_system_context.memory_blocks.length
@operating_system_context.memory_blocks
@operating_system_context
@operating_sytem_context
      memory_size = @memory_blocks.length
@operating_system_context.memory_blocks
            @operating_system_context.create_file(operation.filename, available_start_block, operation.if_create)
@operating_system_context.memory_blocks
@operating_system_context.dump_memory
@operating_system_context.dump
@operating_system_context
        available_start_block = @operating_system_context.find_block_for_file(operation.if_create)
quit
5%4
3%4
4%4
4%2
operation.filename
operation
j.index("0003123912893")
j.index("000")
j
j = j + j
j = bm.join("")
c = bm.join("")
bm
bm.join("")
''.join(bm)
operation
bm + bm
bm + bm.reverse
bm.reverse
bm.revers
bm
bn
bm = @operating_system_context.get_bitmap_memory
@operating_system_context.get_bitmap_memory
@operating_system_context
quit
@operating_system_context.memory_blocks
@operating_system_context
operation.if_create
operation.filename
operation
quit
qut
c
current_process
quit
@processes[4]
@processes[3]
@processes[2]
@processes[1]
@processes[0]
current_process[0]
@processes
current_process
                operation.execute(current_process, round_robin_ticks)
round_robin_ticks
quit
operations
current_process
process
quit
@operations_by_process[0]
@operations_by_process
quit
total_blocks_occupied
lines[5]
lines[6]
lines
operations_beggining
operations
quit
operations
operation
quit
continue
operations[0]
operations
quit
continue
operation
c
operation
c
operation
c
operation
c
operation
operation.number_process_op == number_op
c
operation.number_process_op == number_op
operation
quit
continue
number_op
operations
quit
quit y
quit
find_operation_by_process_op(operations, idx)
operations
find_operation_by_process_op(operations, idx)
idx
exit
print (0..operations.last.number_process_op)
puts (0..operations.last.number_process_op)
(0..operations.last.number_process_op)
(0..operations.last.number_process_op).each
(0..operations.last.number_process_op).each do |idx|
  (0..operations.last.number_process_op).each do |idx|
0..operations.last.number_process_op
puts 0..4
0..operations.last.number_process_op
operations.last.number_process_op
operations.last
operations
op
batch
c
batch
c
batch
quit
batch
quit
c
operations[0]
operations
quit
continue
@operations
@processes
@process
quit
build_create_operation(tokens)
c
build_create_operation(tokens)
tokens
build_create_operation(tokens)
c
build_create_operation(tokens)
c
build_create_operation(tokens)
    )build_create_operation(token
      number_process_op: normalize_token(tokens[4]).to_i
      if_create: normalize_token(tokens[3]).to_i,
      filename: normalize_token(tokens[2]).tr(' ', ''),
      operation_code: normalize_token(tokens[1]).to_i,
      process_id: normalize_token(tokens[0]).to_i,
Operation.new(
tokens
    )ok
      number_process_op: normalize_token(tokens[4]).to_i
      if_create: normalize_token(tokens[3]).to_i,
      filename: normalize_token(tokens[2]).tr(' ', ''),
      operation_code: normalize_token(tokens[1]).to_i,
      process_id: normalize_token(tokens[0]).to_i,
Operation.new(
normalize_token(tokens[1]).to_i == 0
normalize_token(tokens[1]).to_i
normalize_token(tokens[1]).to_I
normalize_token(tokens[1])
tokens[1]
tokens
quit
continue
@operations
quit
continue
@operations_by_process[0][4]
@operations_by_process[0][54
@operations_by_process[0][5]
@operations_by_process[0][6]
@operations_by_process[0][5]
@operations_by_process[0][4]
@operations_by_process[0][3]
@operations_by_process[0][2]
@operations_by_process[0][1]
@operations_by_process[0][0]
@operations_by_process[0]
@operations_by_process
quit
continue
@operations_by_process[0]
@operations_by_process
@operations_by_process[current_process]
quit
continue
@operations_by_process[0]
@operations_by_process.first[1]
@operations_by_process.first[0]
